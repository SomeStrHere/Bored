# Console program that will return from a list; a random chore, a random fun thing to do, or a 
# random selection from a list of both chores and fun things to do.
#
# V: 1.0.0

import sys
import random
from clearConsole import *

def menu():
    """Generates program menu."""

    print('Bored\n')
       
    print('A - Displays a random fun or chore activity')
    print('C - Displays a random chore activity')
    print('F - Displays a random fun activity')
    print('X - Exits program')
    print('\nPlease enter option :')

    userChoice = input('\n').upper()

    if userChoice == 'X' :
        clearConsole(0)
        sys.exit

    elif userChoice == 'A' :
        generateActivity('all')

    elif userChoice == 'C' :
        generateActivity('chore')

    elif userChoice == 'F' :
        generateActivity('fun')

    else :
        print('Invalid option, please try again')
        menu()


def generateActivity(userChoice) :
    """Generates a random activity string.
    
    Generates a random string value from a user selected chore, fun or combined list.
    The lists are generated from a fun.txt and chore.txt file unless there is an error, or
    those files cannot be found. If fun.txt and chore.txt files cannot be found, values will
    be derived from an internal default list.

    Args :
        userChoice (str) : The value entered by user, passed by menu() 

    """
    
    #Default lists
    chores = ['Wash Dishes', 'Do Laundry', 'Clean Bathroom', 'Walk The Dog', 'Hoover/Sweet Floors']
    fun = ['Watch TV', 'Play a game', 'Have a run', 'Go Swimming', 'Draw/Paint']

    allActivities = chores + fun

    if userChoice == 'all' :

        try :
           allList = readFile('all')
           displayOutput(random.choice(allList))

        except FileNotFoundError :
            print('Sorry, all activities list, file not found')
            print('Using default all activities list...\n')
            displayOutput(random.choice(allActivities))

        except :
            print('Sorry there was an error with all.txt')
            print('Using default all activities list...\n')
            displayOutput(random.choice(allActivities))
            

    elif userChoice == 'chore' :

        try :
            choreList = readFile('chore')
            displayOutput(random.choice(choreList))

        except FileNotFoundError :
            print('Sorry, chore activities list, file not found ')
            print('Using default all activities list...\n')
            displayOutput(random.choice(allActivities))

        except :
            print('Sorry there was an error with chore.txt')
            print('Using default chore list...\n')
            displayOutput(random.choice(chores))

    elif userChoice == 'fun' :
        try :
            funList = readFile('fun')
            displayOutput(random.choice(funList))

        except FileNotFound :
            print('Sorry, fun activities, list, file not found')
            print('Using default fun activities list...\n')
            displayOutput(random.choice(fun))

        except :
            print('Sorry there was an error with fun.txt')
            print('Using default fun activities list...\n')
            displayOutput(random.choice(fun))
    else :
        print('Sorry, there was an error')
        menu()


def readFile(list) : 
    """Reads fun.txt, chore.txt or both.
    
    Opens and reads the entire contents of fun.txt, chore.txt or both files, depending
    on the value of list passed by generateActivity.

    Args :
        list (str) : A value representing which file(s) to read, passed by generateActivity() 

    Returns : ActivityList (list) a list of values in fun.txt, chore, txt or both files.

    """
    READ = 'r'
    fileName = list + '.txt'

    if list == 'all' : 

        with open('fun.txt', READ) as f :
            dictionary_fun = f.readlines() 

            funList = [word.strip() for word in dictionary_fun]

        with open('chore.txt', READ) as c :
            # Reads the entire file
            dictionary_chore = c.readlines() 

            choreList = [word.strip() for word in dictionary_chore] 

        ActivityList = funList
        ActivityList.extend(choreList)

    else :

        with open(fileName, READ) as f :
            # Reads the entire file
            dictionary = f.readlines() 

        # Seperates each word to create a list of words
        ActivityList = [word.strip() for word in dictionary] 
     
    return(ActivityList)

     
def displayOutput(activity) :
    """Generates program output to the user.
    
    Takes in the activity (string) which is the randomly selected activity generated by
    generateActivity() and prints it along with additional print statements and formatting
    to the screen.

    Args :
        activity (str) : A randomly selected activity, generated by generateActivity() 

    """ 
    
    clearConsole(0)
    print('\nYour randomly selected activity is:\n')
    print(activity)
     

def main() : 
    
    menu()


if __name__ == "__main__" :
    main()
